%h1
  = "Протокол к "
  %a{:href => commission_path(@uik.id)}
    =@uik.name+'('+@uik.root.name+')'
%h2 
  Цифровые копии протокола и других документов

- if @protocol.own?(current_user)
  - unless @protocol.new_record?
    = fields_for Picture.new do |f|
      = f.file_field :image, :rel => commission_protocol_pictures_path(@protocol.commission_id, @protocol)


  - key = Rails.application.config.session_options[:key]
  = content_for :head do
    :javascript
      $(document).ready(function(){


      var upload_params = {
        '#{key}' : '#{cookies[key]}',
        '#{request_forgery_protection_token}' : encodeURI(encodeURIComponent('#{form_authenticity_token}')),
        'X-CSRF-Token': encodeURI(encodeURIComponent('#{form_authenticity_token.to_s}')),
        'csrf-token': encodeURI(encodeURIComponent('#{form_authenticity_token.to_s}')),
        '_http_accept': 'application/javascript'
      };
      var url = $('input#picture_image').attr('rel');
      $('input#picture_image').uploadify({
        'uploader'     : '/assets/uploadify.swf',
        'script'       : url,
        'fileDataName' : 'picture[image]',
        'fileExt'      : '*.png;*.jpg;*.gif',
        'cancelImg'    : '/assets/cancel.png',
        'multi'        : true,
        'scriptData'   : upload_params,
        'auto'         : true,
        'onComplete'   : function(e, id, obj, response, data) {
          $('#pictures').append(response);
        }
      });
      });

#pictures
  = render :partial => 'picture', :collection => @protocol.pictures

-#%table
  -#%tr
    -# @protocol.pictures.each do |pic|
      -#%td
        -#= pic.id

%h2
  Данные с копии
= render "form"
